<!doctype html>
<html lang="en">
<head>
    <title>Graderoom</title>
    <link rel="icon" href="../public/resources/common/icon.png">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:500&display=swap">
    <% if (user.appearance.darkMode) { %>
        <link rel="stylesheet" type="text/css" href="public/css/dark_mode.css">
    <% } else { %>
        <link rel="stylesheet" type="text/css" href="public/css/light_mode.css">
    <% } %>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Javascript imports -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</head>
<body>

<!-- Navbar -->
<% include partials/user/navbar.ejs %>
<div class="container h-100 d-flex justify-content-center">
    <div class="col-sm-12 col-md-10 col-lg-9 col-xl-8">
        <div class="card card-signin my-5">
            <div class="card-body">
                <h1 class="text-center card-title">
                    <i class="fa fa-calculator" aria-hidden="true" ></i>
                    Final Grade Calculator
                </h1>
                <div id="calculatorMessage" class="alert alert-success alert-dismissible" style="display:none">
                    <div style="font-weight: bold" class="messageTxt"></div>
                    <a class="close" onclick="closeMessage('calculatorMessage')" aria-label="close">X</a>
                </div>
                <form id="calculateFinalGrade" class="form-signin">
                    <div style="display: flex; align-items: center">
                        <label class="form-group" style="display: flex; align-items: flex-end">
                            <span style="text-align: right">Your current grade is</span>
                            <input class="number-input form-control" style="margin-left: 1rem; width: 100px"
                                   id="currentGrade" type="number" step="0.0001" required>
                            <span style="text-align: left">%</span>
                        </label>
                        <label style="display: flex; align-items: flex-end">
                            <select id="chooseClass" style="float: right" class="dropdown">
                                <option>-- Class --</option>
                                <% for (let i = 0; i < user.grades.length; i++) { %>
                                    <option><%= user.grades[Object.keys(user.grades)[i]].class_name %></option>
                                <% } %>
                            </select>
                        </label>
                    </div>
                    <div style="display: flex; align-items: center">
                        <label class="form-group" style="display: flex; align-items: flex-end">
                            <span style="text-align: right">You want at least a</span>
                            <input class="number-input form-control" style="margin: 0 1rem 0 1rem; width: 100px"
                                   id="goal" type="number" step="0.01" required>
                            <span style="text-align: left">% in the class.</span>
                        </label>
                        <label style="display: flex; align-items: flex-end">
                            <select id="chooseLetterGrade" style="float: right" class="dropdown">
                                <option value="97.5">A+</option>
                                <option value="92.5">A</option>
                                <option value="89.5">A-</option>
                                <option value="87.5">B+</option>
                                <option value="82.5">B</option>
                                <option value="79.5">B-</option>
                                <option value="77.5">C+</option>
                                <option value="72.5">C</option>
                                <option value="69.5">C-</option>
                                <option value="67.5">D+</option>
                                <option value="62.5">D</option>
                                <option value="59.5">D-</option>
                            </select>
                        </label>
                    </div>
                    <div class="card-footer">
                        <div style="display: flex; align-items: center">
                            <label class="form-group" style="display: flex; align-items: flex-end;">
                                <span style="text-align: right">Your final is worth</span>
                                <input class="number-input form-control" style="margin: 0 1rem 0 1rem; width: 100px"
                                       id="finalWeight" type="number" step="0.00000001">
                                <span style="text-align: left">% of your grade.</span>
                            </label>
                        </div>
                        <p>or</p>
                        <div style="display: flex; align-items: center">
                            <label class="form-group" style="display: flex; align-items: flex-end;">
                                <span style="text-align: right">Your final is worth</span>
                                <input class="number-input form-control" style="margin: 0 1rem 0 1rem; width: 100px"
                                       id="finalPoints" type="number" step="0.00000001">
                                <span style="text-align: left">points in </span>
                            </label>
                            <label style="display: flex; align-items: flex-end">
                                <select id="chooseWeight" style="float: right" class="dropdown"></select>
                            </label>
                        </div>
                    </div>
                    <div class="text-center">
                        <button class="btn btn-default btn-lg" type="submit">
                            Calculate what I need on the final
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

</body>
</html>

<script>

    user = <%- userRef %>;
    let currentGradeDiv = $('#currentGrade');
    let chooseClassDiv = $('#chooseClass');
    let goalDiv = $('#goal');
    let chooseLetterGradeDiv = $('#chooseLetterGrade');
    let finalWeightDiv = $('#finalWeight');
    let chooseWeightDiv = $('#chooseWeight');
    let form = $('#calculateFinalGrade');

    goalDiv.val(97.5);
    goalDiv.prop('defaultValue', 97.5);
    manageChooseWeight(chooseClassDiv[0].selectedIndex - 1);

    chooseClassDiv.on('input', function () {
        if ($(this)[0].selectedIndex === 0) {
            currentGradeDiv.val('');
            currentGradeDiv.prop('defaultValue', '');
            finalWeightDiv.val('');
            finalWeightDiv.prop('defaultValue', '');
        } else {
            currentGradeDiv.val(+(getOverallGrade($(this)[0].selectedIndex - 1).toFixed(3)));
            currentGradeDiv.prop('defaultValue', +(getOverallGrade($(this)[0].selectedIndex - 1).toFixed(3)));
        }
        finalWeightDiv.val('');
        finalWeightDiv.prop('defaultValue', '');
        finalPointsDiv.val('');
        finalPointsDiv.prop('defaultValue', '');
        manageChooseWeight($(this)[0].selectedIndex - 1);

        // Submit the form.
        form.submit();
    });

    currentGradeDiv.on('input', function () {
        // Submit the form.
        form.submit();
    });

    goalDiv.on('input', function () {
        // Submit the form.
        form.submit();
    });

    chooseLetterGradeDiv.on('input', function () {
        goalDiv.val(document.getElementById('chooseLetterGrade').options[$(this)[0].selectedIndex].value);
        goalDiv.prop('defaultValue', document.getElementById('chooseLetterGrade').options[$(this)[0].selectedIndex].value);
    });

    chooseWeightDiv.on('input', function () {
        if ($(this)[0].selectedIndex === 0) {
            finalWeightDiv.val('');
            finalWeightDiv.prop('defaultValue', '');
        } else {
            // Get the form.
            let formData;
            let message;
            let formMessagesDiv;

            // Serialize the form data.
            let selectedWeight = $('#chooseWeight option:selected');
            formData = JSON.parse(JSON.stringify('username=' + user.username
                + '&' + 'currentGrade=' + currentGradeDiv[0].valueAsNumber
                + '&' + 'classIndex=' + (chooseClassDiv[0].selectedIndex - 1)
                + '&' + 'categoryName=' + selectedWeight.html()
                + '&' + 'finalPoints=' + finalPointsDiv.val()
                + '&' + 'categoryWeight=' + selectedWeight.val()));

            // Get the text field
            message = finalWeightDiv;

            // Submit the form using AJAX.
            $.ajax({
                type: 'POST',
                url: '/getFinalWeightWithCategory',
                data: formData,
                async: true
            })

                .done(function (response) {
                    // Set the message text.
                    $(message).val('');
                    $(message).prop('defaultValue', '');
                    $(message).val(parseFloat(parseFloat(response).toFixed(8)));
                    $(message).prop('defaultValue', parseFloat(parseFloat(response).toFixed(8)));
                })

                .fail(function (data) {

                    // Set the message text.
                    if (data.responseText !== '') {
                        $(message).val(data.responseText);
                        $(message).prop('defaultValue', data.responseText);
                    } else {
                        $(message).val('----');
                        $(message).prop('defaultValue', '----');
                    }

                    // Show the div.
                    $(formMessagesDiv).css('display', 'block');
                })
        }
    });
    
    finalWeightDiv.on('input', function () {
        // Submit the form.
        form.submit();
    });

    let finalPointsDiv = $('#finalPoints');
    finalPointsDiv.on('input', function () {
        finalWeightDiv.val('');
        finalWeightDiv.prop('defaultValue', '');
        if (chooseClassDiv[0].selectedIndex !== 0) {
            // Get the form.
            let formData;
            let message;
            let formMessagesDiv;

            // Serialize the form data.
            formData = JSON.parse(JSON.stringify('username=' + user.username
                + '&' + 'currentGrade=' + currentGradeDiv[0].valueAsNumber
                + '&' + 'classIndex=' + (chooseClassDiv[0].selectedIndex - 1)
                + '&' + 'categoryName=' + $('#chooseWeight option:selected').html()
                + '&' + 'finalPoints=' + $('#finalPoints').val()
                + '&' + 'categoryWeight=' + $('#chooseWeight option:selected').val()));

            // Get the text field
            message = finalWeightDiv;

            // Submit the form using AJAX.
            $.ajax({
                type: 'POST',
                url: '/getFinalWeightWithCategory',
                data: formData,
                async: true
            })

                .done(function (response) {
                    // Set the message text.
                    $(message).val(parseFloat(parseFloat(response).toFixed(8)));
                    $(message).prop('defaultValue', parseFloat(parseFloat(response).toFixed(8)));

                    // Submit the form.
                    form.submit();
                })

                .fail(function (data) {

                    // Set the message text.
                    if (data.responseText !== '') {
                        $(message).val(data.responseText);
                        $(message).prop('defaultValue', data.responseText);
                    } else {
                        $(message).val('');
                        $(message).prop('defaultValue', '');
                        $(message).val('----');
                        $(message).prop('defaultValue', '----');
                    }

                    // Show the div.
                    $(formMessagesDiv).css('display', 'block');
                })
        }
    });

    function manageChooseWeight(classIndex) {
        let weightDropdown = document.getElementById('chooseWeight');
        chooseWeightDiv.find('option').remove();
        let newWeight = document.createElement('option');
        newWeight.text = '-- Category --';
        newWeight.value = '';
        weightDropdown.add(newWeight);
        if (classIndex >= 0) {
            for (let i = 0; i < Object.keys(user.weights[user.grades[Object.keys(user.grades)[classIndex]].class_name]).length; i++) {
                let newWeight = document.createElement('option');
                newWeight.text = Object.keys(user.weights[user.grades[Object.keys(user.grades)[classIndex]].class_name])[i];
                newWeight.value = Object.values(user.weights[user.grades[Object.keys(user.grades)[classIndex]].class_name])[i].toString();
                weightDropdown.add(newWeight)
            }
        }
        if (weightDropdown.length === 1) {
            chooseWeightDiv.find('option').remove();
            newWeight.text = '-- Select Class --';
            newWeight.value = '';
            weightDropdown.add(newWeight);
        }

    }

    function closeMessage(id) {
        document.getElementById(id).style.display = 'none';
    }

    $('#calculateFinalGrade').submit(function (event) {

        event.preventDefault();
        console.log('submitting');
        let currentGrade = currentGradeDiv[0].valueAsNumber;
        let goal = goalDiv[0].value;
        let finalWeight = finalWeightDiv[0].valueAsNumber;
        let letterGoal;

        let digitsInGoalMinusOne = Math.floor(Math.log10(goal)),
            firstDigitInGoal = Math.floor(goal / Math.pow(10, digitsInGoalMinusOne));
        if (firstDigitInGoal === 8) {
            letterGoal = 'an ' + goal + '%';
        } else {
            letterGoal = 'a ' + goal + '%';
        }

        if (goal === '97.5') {
            letterGoal = 'an A+';
        } else if (goal === '92.5') {
            letterGoal = 'an A';
        } else if (goal === '89.5') {
            letterGoal = 'an A-';
        } else if (goal === '87.5') {
            letterGoal = 'a B+';
        } else if (goal === '82.5') {
            letterGoal = 'a B';
        } else if (goal === '79.5') {
            letterGoal = 'a B-';
        } else if (goal === '77.5') {
            letterGoal = 'a C+';
        } else if (goal === '72.5') {
            letterGoal = 'a C';
        } else if (goal === '69.5') {
            letterGoal = 'a C-';
        } else if (goal === '67.5') {
            letterGoal = 'a D+';
        } else if (goal === '62.5') {
            letterGoal = 'a D';
        } else if (goal === '59.5') {
            letterGoal = 'a D-';
        }

        //TODO Finish these messages
        let grade = +((goal - (currentGrade * (100 - finalWeight) / 100)) / finalWeight * 100).toFixed(3);
        let startMessage;
        let endMessage;
        if (grade > 100) {
            startMessage = "Aww snap!";
            endMessage = "Try aiming a little lower.";
        } else if (grade > 90) {
            startMessage = "Ooh that's close!";
            endMessage = "Study hard!";
        } else if (grade > 80) {
            startMessage = "Hey, that's not bad!";
            endMessage = "You can do it!"
        } else if (grade > 70) {
            startMessage = "Looks like your hard work paid off!";
            endMessage = "";
        } else if (grade > 60) {
            startMessage = "";
            endMessage = "";
        } else if (grade > 50) {
            startMessage = "";
            endMessage = "";
        } else if (grade > 0) {
            startMessage = "";
            endMessage = "";
        } else {
            startMessage = "";
            endMessage = "";
        }

        let digitsInGradeMinusOne = Math.floor(Math.log10(grade)),
            firstDigitInGrade = Math.floor(grade / Math.pow(10, digitsInGradeMinusOne));

        let formattedGrade;
        if (!grade) {
            return;
        }
        if (firstDigitInGrade === 8) {
            formattedGrade = 'an ' + grade + '%';
        } else {
            formattedGrade = 'a ' + grade + '%';
        }

        let gradeMessage = "You need " + formattedGrade + " on the final to get " + letterGoal + " overall.";
        let message = startMessage + " " + gradeMessage + " " + endMessage;

        let calculatorMessageDiv = $('#calculatorMessage').css('display', 'none');
        let extraMessageDiv = $('#extraMessage').css('display', 'none');
        if (currentGradeDiv[0].valueAsNumber < 0) {
            calculatorMessageDiv.removeClass('alert-danger').addClass('alert-success').css('display', 'block').find('.messageTxt').text(message);
            extraMessageDiv.removeClass('alert-success').addClass('alert-danger').css('display', 'block').find('.messageTxt').text('But I highly doubt you have a negative grade.');
        } else if (finalWeightDiv[0].valueAsNumber <= 0) {
            extraMessageDiv.removeClass('alert-success').addClass('alert-danger').css('display', 'block').find('.messageTxt').text('Your final weight must be greater than 0.');
        } else if (grade < 0) {
            calculatorMessageDiv.removeClass('alert-danger').addClass('alert-success').css('display', 'block').find('.messageTxt').text(message);
            extraMessageDiv.removeClass('alert-danger').addClass('alert-success').css('display', 'block').find('.messageTxt').text("Well done!");
        } else {
            calculatorMessageDiv.removeClass('alert-danger').addClass('alert-success').css('display', 'block').find('.messageTxt').text(message);
        }

    });

    function getTotalWeight(classIndex) {
        let className = user.grades[classIndex].class_name;
        let classWeights = Object.values(user.weights[className]);
        let totalWeight = 0;
        for (let i = 0; i < classWeights.length; i++) {
            totalWeight += classWeights[i];
        }
        return totalWeight;
    }

    function getOverallGrade(classIndex) {
        let className = user.grades[classIndex].class_name;
        if (className in user.weights) {
            let classCategories = Object.keys(user.weights[className]);
            let classWeights = Object.values(user.weights[className]);
            let overallGrade = 0;
            for (let i = 0; i < classCategories.length; i++) {
                overallGrade += getCategoryGrade(classIndex, classCategories[i]) * classWeights[i] / 100;
            }
            let ratio = 100 / getTotalWeight(classIndex);
            overallGrade *= ratio;
            return overallGrade;
        }
        return 0;
    }

    function getCategoryGrade(classIndex, categoryName) {
        let grades = user.grades[classIndex].grades;
        let totalGotten = 0;
        let totalPossible = 0;
        for (let i = 0; i < grades.length; i++) {
            if (!grades[i].exclude && grades[i].category === categoryName) {
                totalGotten += grades[i].points_gotten;
                totalPossible += grades[i].points_possible;
            }
        }
        if (totalPossible === 0) {
            return 0;
        }
        return +((totalGotten / totalPossible * 100).toFixed(3));
    }

</script>