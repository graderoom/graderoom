<!-- Weights Card -->
<div class="blurred-login" id="updateWeightsDisplay"
     style="position:fixed; display:none; height: 100%; width: 100%; top: 0; left: 0; z-index: 1">
    <div class="blurred-background"></div>
    <div class="col-sm-10 col-md-8 col-lg-8 col-xl-7 mx-auto">
        <div id="weightsCard" class="card card-signin my-5" style="overflow:scroll;">
            <btn class="btn btn-md" onclick="closeForm('updateWeightsDisplay')"
                 style="width: fit-content; margin-bottom:0">
                <i class="fa fa-close" aria-hidden="true"></i> Close
            </btn>
            <div class="card-body" style="padding-top: 1em; padding-bottom: 1em">
                <div id="edited" style="display:none"></div>
                <h1 class="card-title text-center"><span class="fa fa-pencil"></span> Update Weights</h1>
                <span class="accordion" id="accordionForms">
                    <% for (var i = 0; i < JSON.parse(gradeData).length; i++) {
                        let grade = JSON.parse(gradeData)[i]; %>
                    <form id="weights<%= i %>" class="form-ajax form-weights form-signin" action="/updateweights">
                        <className style="display:none"><%= grade.class_name %></className>
                        <label class="collapsed" data-toggle="collapse" href="#collapse<%= i %>"
                               style="display: flex; margin: 0; cursor: pointer">
                            <h5 style="color:<%= user.appearance.classColors[i] %>; cursor: pointer"
                                id="<%= grade.class_name %>" style="display: inline-block">
                                <%= grade.class_name %>&nbsp;
                                <i class="fa" aria-hidden="true"></i>
                            </h5>
                            <span id="weightMessage<%= i %>" class="alert-custom fail"
                                  style="float: right; width: fit-content; display:none; margin-bottom: 8px; padding: 8px 0 0 8px">
                                <div style="display:none" class="sk-chase-mini">
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                </div>
                                <span class="messageTxt">Missing weights</span>
                            </span>
                        </label>
                        <span style="border-radius: 0.25em" class="collapse collapse-underline"
                              id="collapse<%= i %>" data-parent="#accordionForms">
                            <% let weights = JSON.parse(weightData)[grade.class_name]["weights"] %>
                            <% for (let j = 0; j < Object.keys(weights).length; j++) { %>
                                <div class="form-group" style="display: flex; align-items: flex-end;">
                                    <% let category = Object.keys(weights)[j]; %>
                                    <% let value = weights[category] %>
                                    <label class="disableable"
                                           style="font-size: 0.9rem; <% if(!value && value != 0){ %> color: lightcoral; <% } else { %> color: <%= user.appearance.classColors[i] %>; <% } %> white-space: nowrap; margin-bottom: 0;"><%= category %>
                                        :&nbsp</label>
                                    <input style="<% if (!value && value != 0) { %> border-color: lightcoral; <% } else { %> border-color: <%= user.appearance.classColors[i] %>!important; <% } %>"
                                           value="<%= value %>"
                                           type="number"
                                           min="0"
                                           step="0.1"
                                           class="disableable form-control <% if(value || value == 0){ %> text-view <% } %>"
                                           name="<%= category %>"
                                           oninput="this.classList.remove('text-view'); showSubmitButton(this); "
                                    >
                                </div>
                            <% } %>
                            <div class="break"></div>
                            <div class="form-group" style="display: flex; align-items: flex-end;">
                                <label style="color: <%= user.appearance.classColors[i] %>; font-size: 0.9rem; white-space: nowrap; margin-bottom: 0;">Point
                                    Based?</label>
                                <input
                                        id="check<%= i %>"
                                        style="margin: auto;"
                                        type="checkbox"
                                        class="form-control"
                                        name="hasWeights"
                                <% try { if (JSON.parse(weightData)[grade.class_name]["hasWeights"] === "false") { %>
                                        checked
                                        <% }} catch {
                                        } %>
                                        oninput="showSubmitButton(this); disableInput('check<%= i %>','collapse<%= i %>');"
                                >
                                <script>
                                    function disableInput(checkBoxID, id) {
                                        $('#' + id).find('.disableable').each(function () {
                                            if ($('#' + checkBoxID).is(":checked")) {
                                                $(this).addClass("disabled");
                                                $(this).attr('disabled', 'disabled');
                                            } else {
                                                $(this).removeClass("disabled");
                                                $(this).removeAttr('disabled');
                                            }
                                        })
                                    }

                                    disableInput('check<%= i %>', 'collapse<%= i %>');
                                </script>
                            </div>
                            <div class="formSubmitButton" style="width: 100%; display: none">
                                <button type="submit" class="btn btn-default btn-med">
                                    <i class="fa fa-refresh" aria-hidden="true"></i>
                                    Update
                                </button>
                            </div>
                        </span>
                    </form>
                    <% } %>
                </span>
            </div>
        </div>
    </div>
</div>

<script>
    function showSubmitButton(element) {
        $(element).parents("form").find(".formSubmitButton").css("display", "block");
    }

    function showUpdateWeights(defaultId) {
        //Close Mobile navbar
        try {
            $(".navbar-collapse").collapse("hide");
            closeForm("toggle");
        } catch (e) {
        }

        if (parseInt(defaultId) === -1) {
            defaultId = 0;
            if (!(Object.keys(unobtainedWeights).length === 0)) {
                let classNameToOpen = Object.keys(unobtainedWeights)[0];
                for (let i = 0; i < data.length; i++) {
                    if (data[i].class_name === classNameToOpen) {
                        defaultId = i;
                    }
                }
            }
        }
        cardsDisplayed.push("updateWeightsDisplay");
        $(".blurred-background").each(function () {
            if (cardsDisplayed.includes($($(this).parent())[0].id)) {
                $(this).parent().css("z-index", cardsDisplayed.indexOf($($(this).parent())[0].id) + 2);
            }
        });
        $("#updateWeightsDisplay").show();
        if ($("form.form-weights").length > 0) {
            $("form.form-weights").each(function () {
                let form = $(this);
                let formMessagesDiv = $(this).find(".alert-custom");
                let message = $(this).find(".messageTxt");
                if (unobtainedWeights.hasOwnProperty(form.find("className").text())) {
                    $(formMessagesDiv).removeClass("success");
                    $(formMessagesDiv).addClass("fail");
                    $(message).text("Missing Weights");
                    $(formMessagesDiv).css("display", "inline");
                } else {
                    $(formMessagesDiv).css("display", "none");
                }
            });
        }
        $("#collapse" + defaultId).collapse("show");
        disableScrolling();
    }

    function makeClassPointBased(id) {
        showUpdateWeights(id);
        let checkbox = $("#check" + id);
        checkbox.trigger("click");
        let submitButton = $(checkbox).parents("form").find(".formSubmitButton").find("button");
        submitButton.trigger('click');
    }
  
    $(function initAjaxFormPosts() {
        if ($("form.form-weights").length > 0) {
            $("form.form-weights").each(function () {
                let form = $(this);
                $(form).submit(function (event) {
                    event.preventDefault();
                    if (($(this).find(".formSubmitButton").css("display")) !== "none") {
                        let weightData = (($(form).serializeArray()));
                        let weightURI = {};
                        jQuery.map(weightData, function (n, i) {
                            if (n.name !== "hasWeights") weightURI[n.name] = isNaN(parseInt(n.value)) ? n.value : parseInt(n.value);

                        });
                        weightURI = encodeURIComponent(JSON.stringify(weightURI));

                        let className = encodeURI($(form).find("h5").attr("id"));
                        let hasWeights = encodeURI(!($(form).find('input[name="hasWeights"]')).is(':checked'));
                        let formData = "className=" + className + "&hasWeights=" + hasWeights + "&newWeights=" + weightURI;

                        let formMessagesDiv = $(this).find(".alert-custom");
                        let message = $(this).find(".messageTxt");

                        $.ajax({
                            type: "POST", url: $(form).attr("action"), data: formData
                        }).done(function (response) {
                            // Make sure that the formMessages div has the alert-success class.
                            $(formMessagesDiv).removeClass("fail");
                            $(formMessagesDiv).addClass("success");
                            $(form).find(".formSubmitButton").css("display", "none");

                            // Delete weights if hasWeighs is false
                            if (hasWeights === "false") {
                                $(form).find("input").each(function () {
                                    if ($(this)[0].id.substring(0, 5) !== "check") {
                                        $(this).val("");
                                    }
                                });
                            }

                            $(form).find("input").each(function () {
                                $(this).blur();
                                if ($(this)[0].value) {
                                    $(this).addClass("text-view");
                                } else {
                                    $(this).removeClass("text-view");
                                }
                            });
                            let id = parseInt($(form).attr("id").replace(/\D/g, ""));
                            $(form).find("label").each(function () {
                                if ($(this)[0].nextElementSibling.value) {
                                    $(this).css("color", user.appearance.classColors[id]);
                                    $($(this)[0].nextElementSibling).css("border-color", user.appearance.classColors[id]);
                                } else {
                                    $(this).css("color", "lightcoral");
                                    $($(this)[0].nextElementSibling).css("border-color", "lightcoral");
                                }
                            });

                            // Set the message text.
                            $(message).text(response);

                            // Show the div.
                            $(formMessagesDiv).css("display", "inline");

                            // Set edited variable
                            $("#edited").text("Edited");

                            parseData();
                            updateWeightMessages();
                        }).fail(function (data) {
                            //Make sure that the formMessages div has the alert-danger class
                            $(formMessagesDiv).removeClass("success");
                            $(formMessagesDiv).addClass("fail");

                            // Set the message text.
                            if (data.responseText !== "") {
                                $(message).text(data.responseText);
                            } else {
                                $(message).text("Oops! An error occurred and your message could not be sent.");
                            }

                            // Show the div.
                            $(formMessagesDiv).css("display", "inline");
                        });
                    }
                });
            });
        }
    });
</script>
