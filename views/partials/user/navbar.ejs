<!-- Nav Bar -->
<nav class="navbar <% if (theme) { %>navbar-dark<% } else { %>navbar-light<% } %> navbar-expand-lg justify-content-center">
    <span class="d-flex w-50 mr-auto">
        <a href="/" class="navbar-brand" style="margin: 0;">
            <h1><img src="/public/resources/dark_mode/logo.png" style="width: 3rem" class="d-inline-block logo" alt="">
                Graderoom </h1>
        </a>
    </span>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsingNav"
            aria-controls="collapsingNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="navbar-collapse collapse w-100" id="collapsingNav">
        <ul class="navbar-nav w-100 justify-content-center">
            <li style="cursor: pointer" class="nav-item">
                <h5 onclick="showCard('#settingsCardDisplay'); openTab(2)"><%= user.username %></h5>
                <label onclick="showCard('#settingsCardDisplay'); openTab(2)" id="nameDisplay"
                       style="cursor: pointer; margin: 0; display: block"><%= user.personalInfo.firstName %> <%= user.personalInfo.lastName %>
                    '<%= user.personalInfo.graduationYear - 2000 %></label>
                <% if (current == "home") { %>
                    <label style="cursor: pointer; color: green;" onclick="showCard('#updateGradesDisplay');"
                           class="updateGradesMessage">
                        <div class="messageTxt">Loading Sync Status...</div>
                    </label>
                <% } %>
            </li>
        </ul>
        <ul class="navbar-nav w-100 justify-content-end align-items-end ml-auto">
            <% if (current == 'home') { %>
                <li id="finalGradeCalculator" class="nav-item popup">
                    <btn class="btn btn-med" href="/finalgradecalculator"> <i class="fa fa-calculator" aria-hidden="true"></i> 
                        Calculator
                        <div href="/finalgradecalculator">
                            <span class="nav-popups popup-bottom always-show coloration" id="thePopup">
                                Stressed about finals? Find out how much they matter by clicking the "Calculator" button
                            </span>  
                        </div>              
                    </btn>
                </li>
                <li id="syncGrades" class="nav-item popup">
                    <btn class="btn btn-med" onclick="showCard('#updateGradesDisplay'); $('#inputPassword').focus()">
                        <i class="fa fa-refresh" aria-hidden="true"></i> 
                        Sync
                            <span class="nav-popups popup-bottom always-show coloration" id="thePopup">
                                Start syncing grades with PowerSchool by clicking the "Sync" button
                            </span>   
                    </btn>
                </li>
            <% } else { %>
                <li id="home" class="nav-item">
                    <a class="btn btn-med" href="/"> <i class="fa fa-home" aria-hidden="true"></i> Home </a>
                </li>
            <% } %>
            <% if (user.isAdmin) { %>
                <li id="toggleAdmin" class="nav-item toggle-admin">
                    <a class="btn btn-med" href="/admin"> <i class="fa fa-fighter-jet" aria-hidden="true"></i> Admin
                    </a>
                </li>
            <% } else { %>
                <li id="help" class="nav-item popup">
                    <btn class="btn btn-med" onclick="showCard('#settingsCardDisplay'); openTab(4)">
                        <i class="fa fa-info-circle" aria-hidden="true"></i> Help
                            <span class="nav-popups popup-bottom always-show coloration">
                                Here you can find contact information and quick links to important parts of the site.
                                Ask any further questions by emailing <strong><a href="mailto: graderoom@gmail.com">graderoom@gmail.com</a></strong>
                            </span>
                    </btn>
                </li>
            <% } %>
            <% if (current === "home") { %>
                <li id="settings" class="nav-item">
                    <btn class="btn btn-med" onclick="showCard('#settingsCardDisplay')">
                        <i class="fa fa-cog" aria-hidden="true"></i> Settings
                    </btn>
                </li>
            <% } %>
            <li class="nav-item active">
                <a onclick="window.localStorage.setItem('currentPage','')" href="/logout" class="btn btn-med"> <i
                            class="fa fa-sign-out" aria-hidden="true"></i> Logout </a>
            </li>
        </ul>
    </div>
</nav>

<!-- Cards -->
<% if (current === "home") { %>
    <% include sync_grades_card.ejs %>
        <% include settings_card.ejs %>
            <% include changelog.ejs %>
                <% include privacy_policy.ejs %>
                    <% include terms_and_conditions.ejs %>
                        <% include feedback_card.ejs %>
                            <% include whats_new.ejs %>
                                <% include keyboard_shortcuts.ejs %>
<% } %> <% include logged_out.ejs %>

<!-- Custom JavaScript -->
<script>
    function ajaxPostForm(formID, fieldIDsToClear, messagesDivID, async) {
        // Get the form.
        let form = $(formID);
        $(form).submit(function (event) {
            event.preventDefault();
            event.stopImmediatePropagation();

            let formData;
            let message;
            let formMessagesDiv;

            // Serialize the form data.
            if (formID === "#chooseTheme") {
                let data = JSON.parse(JSON.stringify($(form).serializeArray()));
                if (data[0].value === "auto") {
                    if (!data[1].value) {
                        data[1].value = document.getElementById("darkModeStart").placeholder;
                    }
                    if (!data[3].value) {
                        data[3].value = document.getElementById("darkModeFinish").placeholder;
                    }
                }
                formData = data;
            } else {
                formData = $(form).serialize();
            }

            // Get the messages.
            formMessagesDiv = $(messagesDivID);
            $(formMessagesDiv).find(".sk-chase-mini").css("display", "inline-block");
            if (formID === "#syncGradesForm" || formID === "#gradeSyncForm") {
                $($(formMessagesDiv)[1]).removeClass("alert-success").removeClass("alert-danger").addClass("alert-info");
                $($(formMessagesDiv)[1]).show();
                message = $($(formMessagesDiv)[1]).find(".messageTxt");
                $(message).text("");
            } else {
                message = $(formMessagesDiv).find(".messageTxt");
                $(message).text("");
                $(formMessagesDiv).removeClass("alert-success").removeClass("alert-danger").addClass("alert-info");
                $(formMessagesDiv).show();
                if (formID === "#randomizeClassColors") {
                    $("#classColors").find("label").css("color", $(formID).parents(".card-footer").css("background-color"));
                }
            }

            if (formID === "#syncGradesForm" || formID === "#gradeSyncForm") {
                $("#updateGradesDisplay input").blur();
                shortcutsEnabled = false;
                $("#loadingDisplay").show();
                $("#syncFailure").hide();
                $("#syncNoData").hide();
            }

            // Submit the form using AJAX.
            $.ajax({
                       type: "POST", url: $(form).attr("action"), data: formData, async: async
                   }).done(function (response) {
                // Special behavior for class colors.
                if (formID === "#randomizeClassColors") {
                    // numClasses is contained in messagesDivID
                    // colors come from response
                    setTimeout(() => {
                    updateClassColors(response);
                }, 500);
                    $("#reloadNeeded").text("Reload Needed");
                } else {
                    if (response.substring(0, 19) === "GradeSync Enabled. ") {
                        response = response.substring(19);
                        $("#syncGradesDiv").hide();
                        $("#gradeSyncDiv").show();
                    }
                    if (response === "No class data.") {
                        $("#syncNoData").show();
                        $(formMessagesDiv).find(".sk-chase-mini").hide();
                        $(formMessagesDiv).find(".messageTxt").text("Cannot access grades.");
                        $($(formMessagesDiv)[1]).removeClass("alert-success").removeClass("alert-danger").addClass("alert-info");
                    } else if (response === "Error scraping grades.") {
                        $("#syncFailure").show();
                        $(formMessagesDiv).find(".sk-chase-mini").hide();
                        $(formMessagesDiv).find(".messageTxt").text("Sync Failed.");
                        $($(formMessagesDiv)[1]).removeClass("alert-success").removeClass("alert-danger").addClass("alert-info");
                    } else if (formID === "#syncGradesForm" || formID === "#gradeSyncForm") {
                        $(formMessagesDiv).find(".sk-chase-mini").hide();
                        clearTimeout(checkLastUpdated);
                        $(formMessagesDiv).find(".dateTxt").text("");
                        $(formMessagesDiv).find(".messageTxt").text("Refresh to see the latest updates.");
                        $($(formMessagesDiv)[1]).removeClass("alert-info").removeClass("alert-danger").addClass("alert-success");
                        setTimeout(() => window.reload(), 400);
                    } else {
                        setTimeout(function () {
                            $(message).text(response);
                            $(formMessagesDiv).find(".sk-chase-mini").hide();
                            // Make sure that the formMessages div has the alert-success class.
                            $(formMessagesDiv).removeClass("alert-info").removeClass("alert-danger").addClass("alert-success");
                        }, 500);
                    }

                    if (formID === "#changeSchoolEmail") {
                        console.log($('#school_email')[0].value);
                        updateNameDisplay(undefined, $('#school_email')[0].value);
                    }

                    // Show the div.
                    $(formMessagesDiv).show();

                    // Show correct sync div
                    if (response === "GradeSync Enabled. Updated grades!") {
                        $("#syncGradesDiv").hide();
                        $("#gradeSyncDiv").show();
                        setTimeout(() => window.reload(), 1400);
                    }

                    // Switch mode instantly
                    if (formID === "#chooseTheme") {
                        if (response === "Dark theme enabled!") {
                            let oldDarkMode = document.getElementById("pageStyle").getAttribute("href") === "public/css/dark_mode.css";
                            darkMode = true;
                            theme = "dark";
                            if (darkMode !== oldDarkMode) {
                                    clearTimeout(changeTransition);
                                    document.getElementById("fade").disabled = false;
                                document.getElementById("pageStyle").setAttribute("href", "public/css/dark_mode.css");
                                renderAllCharts();
                                $(".navbar").removeClass("navbar-light").addClass("navbar-dark");
                                setTimeout(() => {
                                    document.getElementById("fade").disabled = true;
                                }, 500);
                            }
                            localStorage.setItem("defaultAppearance", "dark");
                        } else if (response === "Light theme enabled!") {
                            let autoLimits = $("#autoLimits");
                            autoLimits.hide();
                            $($(form)[0].elements[7]).hide();
                            $($(form)[0].elements[0]).prop("checked", true);
                            autoLimits[0].children[1].value = (darkModeStart === 0 ? "12" : darkModeStart > 12 ? (darkModeStart - 12).toString() : darkModeStart.toString());
                            autoLimits[0].children[2].selectedIndex = (darkModeStart < 12 ? 1 : 0);
                            autoLimits[0].children[4].value = (darkModeFinish === 24 ? "12" : darkModeFinish > 12 ? (darkModeFinish - 12).toString() : darkModeFinish.toString());
                            autoLimits[0].children[5].selectedIndex = (darkModeFinish === 24 ? 0 : darkModeFinish > 12 ? 1 : 0);
                            document.getElementsByName("theme")[0].setAttribute("checked", "checked");
                            let oldDarkMode = document.getElementById("pageStyle").getAttribute("href") === "public/css/dark_mode.css";
                            darkMode = false;
                            theme = "light";
                            if (darkMode !== oldDarkMode) {
                                clearTimeout(changeTransition);
                                document.getElementById("fade").disabled = false;
                                document.getElementById("pageStyle").setAttribute("href", "public/css/light_mode.css");
                                renderAllCharts();
                                $(".navbar").removeClass("navbar-dark").addClass("navbar-light");
                                setTimeout(() => {
                                    document.getElementById("fade").disabled = true;
                                }, 500);
                            }
                            localStorage.setItem("defaultAppearance", "light");
                        } else {
                            $(form[0].elements[7]).attr("disabled", "disabled");
                            theme = "auto";
                            //console.log("1: ", darkModeStart, darkModeFinish);
                            if ($(form[0].elements.darkModeStartAmPm)[0].selectedOptions[0].value === "PM") {
                                if ($(form[0].elements.darkModeStart)[0].value) {
                                    if ($(form[0].elements.darkModeStart)[0].valueAsNumber !== 12) {
                                        darkModeStart = ($(form[0].elements.darkModeStart)[0].valueAsNumber + 12);
                                    } else {
                                        darkModeStart = 12;
                                    }
                                } else if (parseInt($(form[0].elements.darkModeStart)[0].placeholder) !== 12) {
                                    darkModeStart = parseInt($(form[0].elements.darkModeStart)[0].placeholder) + 12;
                                } else {
                                    darkModeStart = $(form[0].elements.darkModeStart)[0].placeholder;
                                }
                            } else if ($(form[0].elements.darkModeStart)[0].value) {
                                if ($(form[0].elements.darkModeStart)[0].valueAsNumber === 12) {
                                    darkModeStart = 0;
                                } else {
                                    darkModeStart = $(form[0].elements.darkModeStart)[0].valueAsNumber;
                                }
                            } else if (parseInt($(form[0].elements.darkModeStart)[0].placeholder) === 12) {
                                darkModeStart = 0;
                            } else {
                                darkModeStart = $(form[0].elements.darkModeStart)[0].placeholder;
                            }
                            if ($(form[0].elements.darkModeFinishAmPm)[0].selectedOptions[0].value === "PM") {
                                if ($(form[0].elements.darkModeFinish)[0].value) {
                                    if ($(form[0].elements.darkModeFinish)[0].valueAsNumber !== 12) {
                                        darkModeFinish = ($(form[0].elements.darkModeFinish)[0].valueAsNumber + 12);
                                    } else {
                                        darkModeFinish = 12;
                                    }
                                } else if (parseInt($(form[0].elements.darkModeFinish)[0].placeholder) !== 12) {
                                    darkModeFinish = parseInt($(form[0].elements.darkModeFinish)[0].placeholder) + 12;
                                } else {
                                    darkModeFinish = $(form[0].elements.darkModeFinish)[0].placeholder;
                                }
                            } else if ($(form[0].elements.darkModeFinish)[0].value) {
                                if ($(form[0].elements.darkModeFinish)[0].valueAsNumber === 12) {
                                    darkModeFinish = 24;
                                } else {
                                    darkModeFinish = $(form[0].elements.darkModeFinish)[0].valueAsNumber;
                                }
                            } else if (parseInt($(form[0].elements.darkModeFinish)[0].placeholder) === 12) {
                                darkModeFinish = 24;
                            } else {
                                darkModeFinish = $(form[0].elements.darkModeFinish)[0].placeholder;
                            }
                            //console.log("2: ", darkModeStart, darkModeFinish);
                            document.getElementById("darkModeStart").setAttribute("placeholder", (darkModeStart === 0 ? "12" : darkModeStart > 12 ? (darkModeStart - 12).toString() : darkModeStart.toString()));
                            document.getElementById("darkModeFinish").setAttribute("placeholder", (darkModeFinish === 24 ? "12" : darkModeFinish > 12 ? (darkModeFinish - 12).toString() : darkModeFinish.toString()));
                            checkTime();
                        }
                    }

                    // Clear fields to clear
                    for (let i = 0; i < fieldIDsToClear.length; i++) {
                        $(fieldIDsToClear[i]).val("");
                        if (formID === "#changePassword") {
                            $($(fieldIDsToClear[i])[0].previousElementSibling).removeClass("label-active");
                            if ($($(fieldIDsToClear[i])[0].previousElementSibling.children[0])) {
                                $($(fieldIDsToClear[i])[0].previousElementSibling.children[0]).text("");
                            }
                        }
                    }
                    $("input").each(function () {
                        $(this).blur();
                    });
                }
            }).fail(function (data) {
                // Make sure that the formMessages div has the alert-danger class
                $($(formMessagesDiv)[1]).removeClass("alert-info");
                $($(formMessagesDiv)[1]).addClass("alert-danger");

                // Set the message text.
                if (data.responseText !== "") {
                    if (data.responseText === "Incorrect login details.") {
                        $(message).text("Incorrect school password.");
                        $("#inputPassword").focus();
                    } else {
                        if (formID === "#syncGradesForm") {
                            $("#inputUserPassword").focus();
                        } else if (formID === "#gradeSyncForm") {
                            $("#gradeSyncInputUserPassword").focus();
                        }
                        $(message).text(data.responseText);
                    }
                } else {
                    $(message).text("Oops! An error occurred and your message could not be sent.");
                }

                // Show the div.
                $(formMessagesDiv).css("display", "block");

                // Hide loading
                $(formMessagesDiv).find(".sk-chase-mini").hide();

                if (formID === "#syncGradesForm" || formID === "#gradeSyncForm") {
                    clearTimeout(checkLastUpdated);
                }

            }).always(function () {
                if (formID === "#syncGradesForm" || formID === "#gradeSyncForm") {
                    $("#loadingDisplay").hide();
                    shortcutsEnabled = true;
                }
            });
        });
    }

    function showCard(id) {
        cardsDisplayed.push(id.substring(1));
        $(".blurred-background").each(function () {
            if (cardsDisplayed.includes($($(this).parent())[0].id)) {
                $(this).parent().css("z-index", cardsDisplayed.indexOf($($(this).parent())[0].id) + 2);
            }
        });
        $(id).fadeIn(500);
        disableScrolling();
    }

    function closeForm(id) {
        if (cardsDisplayed.includes(id)) {
            cardsDisplayed.splice(cardsDisplayed.indexOf(id), 1);
        }
        if (id === "updateGradesDisplay") {
            setupLastUpdated();
        }
        if (id === "updateWeightsDisplay") {
            if (document.getElementById("edited").textContent === "Edited") {
                window.reload();
            } else {
                let form = document.getElementById(id);
                form.style.display = "none";
                enableScrolling();
            }
        } else if (id === "settingsCardDisplay" && document.getElementById("reloadNeeded").textContent === "Reload Needed") {
            window.reload();
        } else {
            let form = $("#" + id);
            form.fadeOut(100);
            let inputFields = $("#" + id + " .form-control").not(".dont-clear").not(":disabled");
            for (let i = 0; i < inputFields.length; i++) {
                inputFields[i].value = "";
                $(inputFields[i]).trigger("input");
            }
            if (id === "settingsCardDisplay") {
                closeMessage("passwordChangeMessage");
                closeMessage("emailChangeMessage");
                closeMessage("themeMessage");
            }
            enableScrolling();
        }

        // Manage theme selection, if it exists
        try {
            let themeRadioButtons = document.getElementsByName("theme");
            if (theme === "auto") {
                themeRadioButtons[2].checked = true;
            } else if (theme === "dark") {
                themeRadioButtons[1].checked = true;
            } else if (theme === "light") {
                themeRadioButtons[0].checked = true;
            }
        } catch {
        }

        // Manage gradeSync checkbox, if it exists
        try {
            let gradeSync = document.getElementById("gradeSyncToggle");
            if (user.schoolPassword && !gradeSync.checked) {
                gradeSync.checked = true;
            } else if (!user.schoolPassword && gradeSync.checked) {
                gradeSync.checked = false;
            }
        } catch {
        }
    }

    // Collapse navbar or card when click outside
    $(document).mousedown(function (e) {
        //Auto hide for any card with blurred-login
        if ($(e.target).closest(".blurred-login").length) {
            if (!$(e.target).closest(".card").length) {
                closeForm($(e.target).closest(".blurred-login")[0].id);
            }
        }
        if (!$(e.target).closest("#collapsingNav").length && !$(e.target).is("#collapsingNav")) {
            $(".navbar-collapse").collapse("hide");
        }
    });
    // Collapse navbar or card when press escape
    $(document).keydown(function (e) {
        if ($("#loadingDisplay").css("display") === "none") {
            if (e.key === "Escape") { // escape key maps to keycode `27`
                try {
                    $(".navbar-collapse").collapse("hide");
                    closeForm("toggle");
                } catch (e) {
                }
                if (cardsDisplayed.length === 0) return;
                closeForm(cardsDisplayed[cardsDisplayed.length - 1]);
            }
        }
    });
    //ToDo -> Adding mobile size of popups in navbar
    $(window).on('resize',function() {
        if($(window).width() > 991) {
            //Big Screen
        }
        else {
            //Small Screen
        }
    });
</script>
