<style>
    #snow-fall {
        z-index: -1;
        position: fixed;
    }

    #fps {
        font-family: monospace;
        font-size: 0.5rem;
        pointer-events: none;
    }
</style>

<canvas id='snow-fall'></canvas>
<% if (beta) { %>
    <span style="z-index: 999; position: fixed; bottom: 10px; left: 10px;" id="fps"></span>
<% } %>

<script>
    const winterStart = new Date(new Date().getFullYear(), 10, 1); // November 1 of current year
    const winterEnd = new Date(new Date().getFullYear() + 1, 2, 1); // March 1 of next year
    const today = new Date();
    const dateRelatedScale = Math.sqrt(Math.max(Math.min(today - winterStart, winterEnd - today) / ((winterEnd - winterStart) / 2), 0)); // Ranges from 0 to 1. Peaks at mid of winterStart and winterEnd
    const rotationScale = 1;
    const speedScale = 1;
    const buffer = 10;
    const minSpeed = 1;
    const sizeScale = dateRelatedScale; // Change size based on winter-ness

    let numFlakes;
    let snow = [];
    let canvas = document.getElementById("snow-fall"), $$ = canvas.getContext("2d");
    let screenWidth = canvas.width = window.innerWidth, screenHeight = canvas.height = window.innerHeight;

    function Snowy(start = false) {
        if (dateRelatedScale === 0) {
            return;
        }
        let flake;
        numFlakes = dateRelatedScale * screenWidth / 2;
        for (let i = 0; i < numFlakes; ++i) {
            flake = new Flake();
            flake.yPos = Math.random() * (-screenHeight);
            flake.xPos = Math.random() * screenWidth;
            flake.rotation = Math.random() * (Math.PI * 2);
            flake.size = (100 / (10 + (Math.random() * 100))) * sizeScale;
            flake.speed = (Math.pow(flake.size * .8, 2) * .15) * speedScale;
            flake.speed = flake.speed < minSpeed ? minSpeed : flake.speed;
            snow.push(flake);
        }
        if (start) {

            let lastCalledTime;
            let fps = 0;
            let _500msTempFps = [];
            let _500msAverage = 0;
            let fpsScale;

            go();

            <% if (beta) { %>
            setInterval(() => {
                let fpsDisplay = ``;
                fpsDisplay += `500MS AVG: ` + (_500msAverage < 100 ? `&nbsp;` : ``) + (_500msAverage < 10 ? `&nbsp;` : ``) + _500msAverage.toFixed(0) + `FPS<br>`;
                fpsDisplay += `&nbsp;&nbsp;INSTANT: ` + (fps < 100 ? `&nbsp;` : ``) + (fps < 10 ? `&nbsp;` : ``) + fps.toFixed(0) + `FPS`;
                $("#fps").html(fpsDisplay);
            }, 1);
            setInterval(() => {
                if (_500msTempFps.length > 2) {
                    _500msAverage = _500msTempFps.reduce((a, b) => a + b) / _500msTempFps.length;
                    _500msTempFps = [];
                }
            }, 500);
            <% } %>

            function go() {
                if (!lastCalledTime) {
                    lastCalledTime = performance.now();
                    fps = 1;
                    _500msTempFps.push(fps);
                    fpsScale = 1;
                } else {
                    let delta = (performance.now() - lastCalledTime) / 1000;
                    lastCalledTime = performance.now();
                    fps = 1 / delta;
                    _500msTempFps.push(fps);
                    fpsScale = fps / 60;
                }
                $$.clearRect(0, 0, screenWidth, screenHeight);
                $$.fillStyle = "transparent";
                $$.fillRect(0, 0, screenWidth, screenHeight);
                $$.fill();
                let flake;
                for (let i = 0; i < snow.length; ++i) {
                    flake = snow[i];
                    flake.rotation += .05 / fpsScale * (_500msTempFps.slice(-2)[0] === _500msTempFps.slice(-1)[0] ? 0 : 1);
                    flake.rotation = flake.rotation >= Math.PI * 2 ? 0 : flake.rotation;
                    flake.yPos += flake.speed / fpsScale * (_500msTempFps.slice(-2)[0] === _500msTempFps.slice(-1)[0] ? 0 : 1);
                    flake.xPos += Math.sin(flake.rotation * rotationScale) * (flake.size * .3) / fpsScale * (_500msTempFps.slice(-2)[0] === _500msTempFps.slice(-1)[0] ? 0 : 1);
                    if (flake.yPos > screenHeight + 50) {
                        flake.yPos = -10 - Math.random() * buffer;
                    }
                    if (flake.xPos > screenWidth + buffer) {
                        flake.xPos = -buffer;
                    }
                    if (flake.xPos < -buffer) {
                        flake.xPos = screenWidth + buffer;
                    }
                    flake.draw();
                }
                window.requestAnimationFrame(go);
            }
        }

        function Flake() {
            this.draw = function () {
                this.gradient = $$.createRadialGradient(this.xPos, this.yPos, 0, this.xPos, this.yPos, this.size);
                this.gradient.addColorStop(0, "rgba(255,255,255,1)");
                this.gradient.addColorStop(1, "rgba(255,255,255,0)");
                $$.moveTo(this.xPos, this.yPos);
                $$.fillStyle = this.gradient;
                $$.beginPath();
                $$.arc(this.xPos, this.yPos, this.size, 0, Math.PI * 2, true);
                $$.fill();
            };
        }

        let _resizeTimer;
        window.addEventListener("resize", function () {
            clearTimeout(_resizeTimer);
            _resizeTimer = setTimeout(() => {
                canvas.width = screenWidth = window.innerWidth;
                canvas.height = screenHeight = window.innerHeight;
                snow.forEach((flake, index) => delete snow[index]);
                snow = [];
                Snowy();
            }, 1000);
        }, false);
    }

</script>
